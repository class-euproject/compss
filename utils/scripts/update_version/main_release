#!/bin/bash -e

usage() {
  exitValue=$1

  echo " "
  echo "Usage ./main_internal_release new_version"
  echo "E.g. ./main_internal_release 2.3.rc1810"
  echo " "

  exit "$exitValue"
}


  #=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
  # baseVersion:	Refers to the main version: v		2.3.rc1810
  # Version: 		Refers to the current version: v.rcYYMM 2.3.rc1810.rc1701
  #=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

  if [ $# -ne 1 ]; then
    echo "ERROR: Incorrect number of parameters"
    echo "Probably jenkins build parameter 'version' was not set."
    usage 1
  fi

  version=$1




  # Get base version from trunk
  SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
  trunk_dir=${SCRIPT_DIR}/../../../
  baseVersion=$(cat "${trunk_dir}/pom.xml" | grep "compss.version" | tr ">" "\t" | awk '{ print $2 }' | tr "<" "\t" | awk '{ print $1 }')

  echo "Updating COMPSs base version ${baseVersion} to ${version}"

  # Perform update process
  commitChanges="true"
  ./update_trunk_version "${baseVersion}" "${version}" "${commitChanges}"
  ./update_documentation "${version}" "${commitChanges}"
  ./generate_tag "${version}" "${commitChanges}"
  ./update_repo "bar" "apps" "${baseVersion}" "${version}" "${commitChanges}"
  ./update_repo "bar" "tutorial_apps" "${baseVersion}" "${version}" "${commitChanges}"
  ./mvn_deploy_tag "${version}"

  # Deploy to SCs
  ./deploy_tag_to_MN "${version}"
  #./deploy_tag_to_Nord "${version}"
  ./deploy_tag_to_MT "${version}"

  # END
  echo "ALL SUCCESS!"
  exit 0

